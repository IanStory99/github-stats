-- RedefineTables
PRAGMA foreign_keys=OFF;
CREATE TABLE "new_Review" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "AUTHOR_ID" TEXT NOT NULL,
    "PULLREQ_ID" TEXT NOT NULL,
    "STATE" TEXT NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "Review_AUTHOR_ID_fkey" FOREIGN KEY ("AUTHOR_ID") REFERENCES "User" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT "Review_PULLREQ_ID_fkey" FOREIGN KEY ("PULLREQ_ID") REFERENCES "PullRequest" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE
);
INSERT INTO "new_Review" ("AUTHOR_ID", "CREATED_AT", "ID", "PULLREQ_ID", "STATE", "TIMESTAMP", "UPDATED_AT") SELECT "AUTHOR_ID", "CREATED_AT", "ID", "PULLREQ_ID", "STATE", "TIMESTAMP", "UPDATED_AT" FROM "Review";
DROP TABLE "Review";
ALTER TABLE "new_Review" RENAME TO "Review";
CREATE TABLE "new_Commit" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "AUTHOR_ID" TEXT NOT NULL,
    "PULLREQ_ID" TEXT NOT NULL,
    "ADDITIONS" INTEGER NOT NULL,
    "DELETIONS" INTEGER NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "Commit_AUTHOR_ID_fkey" FOREIGN KEY ("AUTHOR_ID") REFERENCES "User" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT "Commit_PULLREQ_ID_fkey" FOREIGN KEY ("PULLREQ_ID") REFERENCES "PullRequest" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE
);
INSERT INTO "new_Commit" ("ADDITIONS", "AUTHOR_ID", "CREATED_AT", "DELETIONS", "ID", "PULLREQ_ID", "TIMESTAMP", "UPDATED_AT") SELECT "ADDITIONS", "AUTHOR_ID", "CREATED_AT", "DELETIONS", "ID", "PULLREQ_ID", "TIMESTAMP", "UPDATED_AT" FROM "Commit";
DROP TABLE "Commit";
ALTER TABLE "new_Commit" RENAME TO "Commit";
CREATE TABLE "new_Repository" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "OWNER_USER_ID" TEXT,
    "OWNER_ORGANIZATION_ID" TEXT,
    "NAME" TEXT NOT NULL,
    "URL" TEXT NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "Repository_OWNER_USER_ID_fkey" FOREIGN KEY ("OWNER_USER_ID") REFERENCES "User" ("ID") ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT "Repository_OWNER_ORGANIZATION_ID_fkey" FOREIGN KEY ("OWNER_ORGANIZATION_ID") REFERENCES "Organization" ("ID") ON DELETE SET NULL ON UPDATE CASCADE
);
INSERT INTO "new_Repository" ("CREATED_AT", "ID", "NAME", "OWNER_ORGANIZATION_ID", "OWNER_USER_ID", "TIMESTAMP", "UPDATED_AT", "URL") SELECT "CREATED_AT", "ID", "NAME", "OWNER_ORGANIZATION_ID", "OWNER_USER_ID", "TIMESTAMP", "UPDATED_AT", "URL" FROM "Repository";
DROP TABLE "Repository";
ALTER TABLE "new_Repository" RENAME TO "Repository";
CREATE TABLE "new_PullRequest" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "AUTHOR_ID" TEXT NOT NULL,
    "REPO_ID" TEXT NOT NULL,
    "MERGED_AT" DATETIME,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "PullRequest_AUTHOR_ID_fkey" FOREIGN KEY ("AUTHOR_ID") REFERENCES "User" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT "PullRequest_REPO_ID_fkey" FOREIGN KEY ("REPO_ID") REFERENCES "Repository" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE
);
INSERT INTO "new_PullRequest" ("AUTHOR_ID", "CREATED_AT", "ID", "MERGED_AT", "REPO_ID", "TIMESTAMP", "UPDATED_AT") SELECT "AUTHOR_ID", "CREATED_AT", "ID", "MERGED_AT", "REPO_ID", "TIMESTAMP", "UPDATED_AT" FROM "PullRequest";
DROP TABLE "PullRequest";
ALTER TABLE "new_PullRequest" RENAME TO "PullRequest";
CREATE TABLE "new_Organization" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "NAME" TEXT NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME
);
INSERT INTO "new_Organization" ("CREATED_AT", "ID", "NAME", "TIMESTAMP", "UPDATED_AT") SELECT "CREATED_AT", "ID", "NAME", "TIMESTAMP", "UPDATED_AT" FROM "Organization";
DROP TABLE "Organization";
ALTER TABLE "new_Organization" RENAME TO "Organization";
CREATE TABLE "new_ReviewComment" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "REVIEW_ID" TEXT NOT NULL,
    "AUTHOR_ID" TEXT NOT NULL,
    "TEXT" TEXT NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "ReviewComment_REVIEW_ID_fkey" FOREIGN KEY ("REVIEW_ID") REFERENCES "Review" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT "ReviewComment_AUTHOR_ID_fkey" FOREIGN KEY ("AUTHOR_ID") REFERENCES "User" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE
);
INSERT INTO "new_ReviewComment" ("AUTHOR_ID", "CREATED_AT", "ID", "REVIEW_ID", "TEXT", "TIMESTAMP", "UPDATED_AT") SELECT "AUTHOR_ID", "CREATED_AT", "ID", "REVIEW_ID", "TEXT", "TIMESTAMP", "UPDATED_AT" FROM "ReviewComment";
DROP TABLE "ReviewComment";
ALTER TABLE "new_ReviewComment" RENAME TO "ReviewComment";
CREATE TABLE "new_Team" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "ORGANIZATION_ID" TEXT NOT NULL,
    "NAME" TEXT NOT NULL,
    "SLUG" TEXT NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "Team_ORGANIZATION_ID_fkey" FOREIGN KEY ("ORGANIZATION_ID") REFERENCES "Organization" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE
);
INSERT INTO "new_Team" ("CREATED_AT", "ID", "NAME", "ORGANIZATION_ID", "SLUG", "TIMESTAMP", "UPDATED_AT") SELECT "CREATED_AT", "ID", "NAME", "ORGANIZATION_ID", "SLUG", "TIMESTAMP", "UPDATED_AT" FROM "Team";
DROP TABLE "Team";
ALTER TABLE "new_Team" RENAME TO "Team";
CREATE TABLE "new_User" (
    "ID" TEXT NOT NULL PRIMARY KEY,
    "ORGANIZATION_ID" TEXT NOT NULL,
    "TEAM_ID" TEXT NOT NULL,
    "LOGIN" TEXT NOT NULL,
    "TIMESTAMP" DATETIME NOT NULL,
    "CREATED_AT" DATETIME DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" DATETIME,
    CONSTRAINT "User_ORGANIZATION_ID_fkey" FOREIGN KEY ("ORGANIZATION_ID") REFERENCES "Organization" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT "User_TEAM_ID_fkey" FOREIGN KEY ("TEAM_ID") REFERENCES "Team" ("ID") ON DELETE RESTRICT ON UPDATE CASCADE
);
INSERT INTO "new_User" ("CREATED_AT", "ID", "LOGIN", "ORGANIZATION_ID", "TEAM_ID", "TIMESTAMP", "UPDATED_AT") SELECT "CREATED_AT", "ID", "LOGIN", "ORGANIZATION_ID", "TEAM_ID", "TIMESTAMP", "UPDATED_AT" FROM "User";
DROP TABLE "User";
ALTER TABLE "new_User" RENAME TO "User";
PRAGMA foreign_key_check;
PRAGMA foreign_keys=ON;
